# Common Configuration for All Environments
spring:
  application:
    name: mts-backend-application
  profiles:
    active: dev  # Default profile

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    config-url: /api-docs/swagger-config
    urls: 
      - url: /api-docs
        name: API
    display-request-duration: true
    default-model-expand-depth: 1
    operations-sorter: method
    tags-sorter: alpha
  show-actuator: true

## Development Environment
---
spring:
  config:
    activate:
      on-profile: dev
  security:
    user:
      name: user
      password: user
  datasource:
    url: jdbc:mysql://localhost:3306/milk_tea_shop_prod
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
      ddl-auto: none
    show-sql: true
    properties:
        hibernate:
            format_sql: true
            use_sql_comments: true
            default_schema: milk_tea_shop_prod
            connection:
              driver_class: com.mysql.cj.jdbc.Driver
            dialect: org.hibernate.dialect.MySQLDialect
    open-in-view: false
  
  flyway:
    enabled: false

server:
  port: 8181
    
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

jwt-config:
    secret: hdvfkfvewfowefihpqhfphwgbwiegihgwinwgnwigiwgiweigoewog
    expiration: 86400000
    header: Authorization
    prefix: Bearer
    token-type: JWT
    issuer: mts-backend

firebase-config:
  bucket: ${FIREBASE_BUCKET_NAME}
  
    
# Database configuration

# Logging configuration
logging:
  level:
    root: INFO
    org.springframework: INFO
    com.myapp: DEBUG
    org.hibernate: DEBUG
    org.springframework.security: DEBUG
    
# Testing Environment
---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: password
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
        ddl-auto: create-drop
    show-sql: true

server:
  port: 8182

# Database configuration

# Logging configuration
logging:
  level:
    root: INFO
    org.springframework: WARN
    com.myapp: DEBUG

# Production Environment
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://${DB_HOST}:3306/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 5
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
        ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        format_sql: false

server:
  port: 9090
  
springdoc:
    api-docs:
        enabled: false
    swagger-ui:
        enabled: false

# Database configuration

# Logging configuration
logging:
  level:
    root: WARN
    org.springframework: ERROR
    com.myapp: WARN
  file:
    name: /var/log/myapp/application.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Cache configuration for production

